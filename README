#=======================
A quick overview.

1.  This code was written to read raw binary files generated from CM1 and analyzed in the paper,

Dahl, J. M. L., M. D. Parker, and L. J. Wicker, 2012: Uncertainties in trajectory calculations within near-surface mesoscyclones of simulated supercells. Mon. Wea. Rev., 140, 2959-2966.


2.  The structure of the code is based on some old IDL code I used in the 1990's for my stormscale analyses.  Basically, I assume that one reads in sucessive snapshots from model output of the velocity field. It also reads in a scalar field ('b', for buoyancy) to compute along the trajectorys.  It then takes the two time levels of data, reads in the correct starting time and locations from a file that stores the trajectories, and does the forward or backward integration.  At the end of the trajectory integration, it then writes back out all the trajectory times steps, velocity, and b data into the netcdf file.  To continue the integration, one simply has to call the traj.py again with the correct parameters, and the code will again read the traj netcdf file, find the correct time step, and start the integration again with the next two time levels.

3. traj.py:  does the actual integration of the trajectories.  There is a test module.  type "traj.py -h" for some meager help.

4. trajsubs.f90:  the fortran routines used to read the binary CM1 data files, and do the RK4 integration.  A compile script is also included.

5.  plottraj.py:  plots a trajectory file using matplotlib.

6.  trajcirc.py:  does some circulation calculations using a trajectory file.


7.  output:  a file showing what the text output stream from a run looks like
